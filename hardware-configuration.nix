# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/447e6b3f-a68a-4aa7-af60-5c5d0a10fa3c";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-b27f3847-5cc5-44a9-b984-0e717374eab5".device =
    "/dev/disk/by-uuid/b27f3847-5cc5-44a9-b984-0e717374eab5";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/F8BB-86B4";
    fsType = "vfat";
  };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u2c2.useDHCP = lib.mkDefault true;

	# Don't wait for the network to come up during boot.
	systemd.services.NetworkManager-wait-online.enable = lib.mkForce false;
  
	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "performance";


}
